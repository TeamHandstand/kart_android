buildscript {
    ext {
        android_support_version = '25.3.1'
        android_test_runner_version = '0.5'
        aws_version = '2.4.4'
        autovalue_version = '1.4.1'
        autovalue_gson_version = '0.4.6'
        crashlytics_version = '2.6.7'
        dagger_version = '2.11'
        espresso_version = '2.2.2'
        glide_version = '3.8.0'
        glide_okhttp3_integration_version = '1.5.0@aar'
        gson_version = '2.8.0'
        google_maps_version = '11.0.1'
        google_phonenumber_version = '8.5.0'
        junit_version = '4.12'
        kotlin_version = '1.1.2-5'
        mockito_version = '2.8.9'
        okhttp3_version = '3.8.0'
        powermock_version = '1.7.0RC4'
        pubnub_version = '4.6.3'
        retrofit_version = '2.3.0'
        rxandroid_version = '1.2.1'
        s3mock_version = '0.2.2'
        sqlbrite_version = '1.1.1'
        sqldelight_version = '0.6.1'
        uiautomator_version = "2.1.2"
    }

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.squareup.sqldelight:gradle-plugin:$sqldelight_version"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    buildToolsVersion "25.0.3"
    buildTypes {
        debug {
            // 10.0.2.2 is the address that the android emulator uses to access the host machine
            buildConfigField "String", "SERVER", "\"http://10.0.2.2:3000\""
            buildConfigField "String", "AWS_COGNITO_POOL_ID", "\"us-east-1:ddfe8d69-56d1-41c7-aabd-6623ce3ddf43\""
            buildConfigField "String", "AWS_BUCKET_NAME", "\"https://kartwheel-staging.s3.amazonaws.com\""
            buildConfigField "String", "PUBNUB_SUBSCRIPTION_KEY", "\"sub-c-10a277a8-0f99-11e7-bd0e-0619f8945a4f\""
            buildConfigField "String", "PLAYER_NO_IMAGE_URL", "\"https://kartwheel-app.s3.amazonaws.com/shared/empty-profile.jpg\""
            buildConfigField "String", "DEFAULT_BUDDY_URL", "\"https://s3.amazonaws.com/kartwheel-production/buddies/buddy-unicorn.png\""
        }

        release {
            buildConfigField "String", "SERVER", "\"https://www.handstandwith.us/kartwheel\""
            buildConfigField "String", "AWS_COGNITO_POOL_ID", "\"us-east-1:ddfe8d69-56d1-41c7-aabd-6623ce3ddf43\""
            buildConfigField "String", "AWS_BUCKET_NAME", "\"https://kartwheel-production.s3.amazonaws.com\""
            buildConfigField "String", "PUBNUB_SUBSCRIPTION_KEY", "\"sub-c-9700ed8c-be38-11e6-8036-0619f8945a4f\""
            buildConfigField "String", "PLAYER_NO_IMAGE_URL", "\"https://kartwheel-app.s3.amazonaws.com/shared/empty-profile.jpg\""
            buildConfigField "String", "DEFAULT_BUDDY_URL", "\"https://s3.amazonaws.com/kartwheel-production/buddies/buddy-unicorn.png\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileSdkVersion 25
    defaultConfig {
        applicationId "us.handstand.kartwheel"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "us.handstand.kartwheel.test.KartWheelTestRunner"
        testFunctionalTest true
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    sourceSets {
        main.java.srcDirs = ['src/main/kotlin']
        test.java.srcDirs = ['src/main/kotlin', 'src/test/kotlin', 'src/commonTest/kotlin']
        androidTest.java.srcDirs = ['src/main/kotlin', 'src/androidTest/kotlin', 'src/commonTest/kotlin']
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations.all {
    resolutionStrategy {
        force("com.google.code.findbugs:jsr305:3.0.1", "org.slf4j:slf4j-api:1.7.22")
    }
}

dependencies {

    compile "com.amazonaws:aws-android-sdk-s3:$aws_version"
    compile "com.android.support:appcompat-v7:$android_support_version"
    compile "com.android.support:design:$android_support_version"
    compile("com.crashlytics.sdk.android:crashlytics:$crashlytics_version@aar") {
        transitive = true;
    }
    compile "com.github.bumptech.glide:glide:$glide_version"
    compile "com.github.bumptech.glide:okhttp3-integration:$glide_okhttp3_integration_version"
    compile "com.google.android.gms:play-services-maps:$google_maps_version"
    compile "com.google.code.gson:gson:$gson_version"
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.googlecode.libphonenumber:libphonenumber:$google_phonenumber_version"
    compile "com.pubnub:pubnub-gson:$pubnub_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp3_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.sqlbrite:sqlbrite:$sqlbrite_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    kapt "com.google.auto.value:auto-value:$autovalue_version"
    kapt("com.google.dagger:dagger-compiler:$dagger_version")
    kapt "com.ryanharter.auto.value:auto-value-gson:$autovalue_gson_version"

    provided "com.google.auto.value:auto-value:$autovalue_version"
    provided "com.ryanharter.auto.value:auto-value-gson:$autovalue_gson_version"

    androidTestCompile "com.android.support:support-annotations:$android_support_version"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestCompile "com.android.support.test:runner:$android_test_runner_version"
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$uiautomator_version"
    androidTestCompile "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
    androidTestCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testCompile "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.powermock:powermock-api-mockito2:$powermock_version"
    testCompile "org.powermock:powermock-module-junit4:$powermock_version"
    testCompile "junit:junit:$junit_version"
}

//kapt { generateStubs = true }
